<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>Google Maps JavaScript API Example</title>
    <style type="text/css">
    v\:* {
      behavior:url(#default#VML);
    }
    </style>
    <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjU0EJWnWPMv7oQ-jjS7dYxSPW5CJgpdgO_s4yyMovOaVh_KvvhSfpvagV18eOyDWu7VytS6Bi1CWxw"
      type="text/javascript"></script>

   <script type="text/javascript">
    //<![CDATA[
    var highlightCircle;
    var map;
    var paintPolygons = new Array();
    var paintPoints = new Array();
    var STROKE_LENGTH = 30;

    // Creates a "circle" using 20-sided GPolygon at the given point
    // Circle polygon object is global variable as there is only one highlighted marker at a time
    // and we want to remove the previously placed polygon before placing a new one.

    function drawCurrentMarker(marker){
      var markerPoint = marker.getPoint();

      var mapNormalProj = G_NORMAL_MAP.getProjection();
      var mapZoom = map.getZoom();

      var polyNumSides = 3;
      var polyRadius = 3;
      var polySideLength = 360/polyRadius;
      var polyPoints = new Array();
      var centerPixel = mapNormalProj.fromLatLngToPixel(markerPoint, mapZoom);
      
      for (var a = 0; a<(polyNumSides+1); a++) {
        var aRad = polySideLength*a*(Math.PI/180);
       	var pixelX = centerPixel.x + polyRadius * Math.cos(aRad);
	var pixelY = centerPixel.y + polyRadius * Math.sin(aRad);
	var polyPixel = new GPoint(pixelX,pixelY);
       	var polyPoint = mapNormalProj.fromPixelToLatLng(polyPixel,mapZoom);
	polyPoints.push(polyPoint);
      }
      var paintPoly = new GPolygon(polyPoints,"#000000",2,0.0,"#FF0000",.5);
      map.addOverlay(paintPoly);
   }

    function load() {
      if (GBrowserIsCompatible()) {
        map = new GMap2(document.getElementById("map"));
        map.addControl(new GSmallMapControl());
        map.addControl(new GMapTypeControl());
        map.setCenter(new GLatLng(37.4419, -122.1419), 13);

        // Creates a marker at the given point with the given number label
        function createMarker(point) {
          var marker = new GMarker(point, {draggable:true});
	  
 	  // This line highlights the marker while dragging
          GEvent.addListener(marker, "drag", function() {
   	    drawCurrentMarker(marker);	
          });

          return marker;
        }

         map.addOverlay(createMarker(new GLatLng(37.4419,-122.1419)));
      }
    }

    //]]>
    </script>
  </head>

  <body onload="load()" onunload="GUnload()">
    <div id="map" style="width: 500px; height: 300px"></div>
  </body>
</html>


