<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>Google Maps JavaScript API Example</title>
    <style type="text/css">
    v\:* {
      behavior:url(#default#VML);
    }
    </style>
    <link rel="stylesheet" type="text/css" href="http://www.google.com/apis/maps/documentation/local_extensions.css" />
    <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAAjU0EJWnWPMv7oQ-jjS7dYxSPW5CJgpdgO_s4yyMovOaVh_KvvhSfpvagV18eOyDWu7VytS6Bi1CWxw"
      type="text/javascript"></script>
    <script src="http://www.google.com/apis/maps/include/prettify.js" type="text/javascript"></script>
 
<script type="text/javascript">
   //<![CDATA[

   var map;
   var currentMarker;

   // Create our "tiny" marker icon
   var iconBlue = new GIcon();
   iconBlue.image = "http://labs.google.com/ridefinder/images/mm_20_blue.png";
   iconBlue.shadow =
"http://labs.google.com/ridefinder/images/mm_20_shadow.png";
   iconBlue.iconSize = new GSize(12, 20);
   iconBlue.shadowSize = new GSize(22, 20);
   iconBlue.iconAnchor = new GPoint(6, 20);
   iconBlue.infoWindowAnchor = new GPoint(5, 1);

   var iconRed = new GIcon();
   iconRed.image = "http://labs.google.com/ridefinder/images/mm_20_red.png";
   iconRed.shadow =
"http://labs.google.com/ridefinder/images/mm_20_shadow.png";
   iconRed.iconSize = new GSize(12, 20);
   iconRed.shadowSize = new GSize(22, 20);
   iconRed.iconAnchor = new GPoint(6, 20);
   iconRed.infoWindowAnchor = new GPoint(5, 1);

   function load() {
     if (GBrowserIsCompatible()) {
       map = new GMap2(document.getElementById("map"));
       map.setCenter(new GLatLng(40.713955826286046,-35.15625), 2);
       tryMarker();
       updateCode();
     }
   }

   function createAndAddMarker() {

     var code = [];
     code.push("var point = new GLatLng(40.71, 36.16);");
     var point = map.getCenter();

     var opts = [];
     var markerOpts = {};

     var val_title = el("opt_title").value;
     if (val_title) {
       opts.push("&nbsp;&nbsp;title: \"" + val_title + "\"");
       markerOpts.title = val_title;
     }
     if (el("opt_draggable").checked) {
       opts.push("&nbsp;&nbsp;draggable: true");
       markerOpts.draggable = true;
     }
     if (el("opt_bouncy").checked) {
       opts.push("&nbsp;&nbsp;bouncy: true");
       markerOpts.bouncy = true;
     }
     if (el("opt_dragCrossMove").checked) {
       opts.push("&nbsp;&nbsp;dragCrossMove: true");
       markerOpts.dragCrossMove = true;
     }
     var val_bounceGravity = parseFloat(el("opt_bounceGravity").value);
     if (val_bounceGravity != 1.0) {
       opts.push("&nbsp;&nbsp;bounceGravity: " + val_bounceGravity + "");
       markerOpts.bounceGravity = val_bounceGravity;
     }
     var val_icon = el("opt_icon").value;
     if (val_icon != "default") {
       // TODO insert code for creating blue or red icons into code
       opts.push("&nbsp;&nbsp;icon: " + val_icon);

       if(val_icon == "iconBlue") {
         markerOpts.icon = iconBlue;
       } else if(val_icon == "iconRed") {
         markerOpts.icon = iconRed;
       }
     }
     
     if (opts.length) {
       code.push("var options = {");
       code.push(opts.join(",\n"));
       code.push("};");
     }
     code.push("var marker = new GMarker(point" +
         (opts.length ? ", options" : "") + ");");
     currentMarker = new GMarker(point, markerOpts);
     alert(markerOpts.bouncy);

     code.push("map.addOverlay(marker);");
     map.addOverlay(currentMarker);

     el("code").innerHTML = code.join("\n");
   }

   function tryMarker() {
     if (currentMarker) {
       map.removeOverlay(currentMarker);
     }
     createAndAddMarker();
   }

   function el(id) {
     return document.getElementById(id);
   }

   function updateCode() {
     tryMarker();
     prettyPrint();
   }
   //]]>
   </script>

 </head>

 <body onload="load()" onunload="GUnload()">
   draggable:<input type="checkbox" id="opt_draggable"
onchange="updateCode()" />
   &nbsp;
   bouncy:<input type="checkbox" id="opt_bouncy" onchange="updateCode()" />
   &nbsp;
   dragCrossMove:<input type="checkbox" id="opt_dragCrossMove"
onchange="updateCode()"/>

   &nbsp;
   bounceGravity:
     <select id="opt_bounceGravity" onchange="updateCode()">
       <option value="1.0" SELECTED>1.0</option>
       <option value="0.8">0.8</option>
       <option value="0.6">0.6</option>
       <option value="0.4">0.4</option>

       <option value="0.2">0.2</option>
  </select>
   &nbsp;
   <br/><br/>
   title:<input type="text" id="opt_title" size="10" value=""
       onkeyup="updateCode()" onchange="updateCode()"/>
   &nbsp;
   icon:
   <select id="opt_icon" onchange="updateCode()">

     <option value="default" SELECTED>default</option>
     <option value="iconBlue">blue</option>
     <option value="iconRed">red</option>
   </select>
   &nbsp;
   <input type="button" onclick="tryMarker()"
       value="Create marker with new options" width="100"/>
   <br/><br/>

   <table>
     <tr>
       <td>
         <div id="map" style="width: 450px; height: 250px"></div>
       </td>
       <td>
         <pre class="prettyprint" id="code"></pre>
       </td>
     </tr>

   </table>
 </body>
</html>
